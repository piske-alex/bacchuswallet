{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cookies.service.ts","webpack:///./src/app/history.service.ts","webpack:///./src/app/history/history.component.css","webpack:///./src/app/history/history.component.html","webpack:///./src/app/history/history.component.ts","webpack:///./src/app/kyc.service.ts","webpack:///./src/app/kyc/kyc.component.css","webpack:///./src/app/kyc/kyc.component.html","webpack:///./src/app/kyc/kyc.component.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register.service.ts","webpack:///./src/app/wallet.service.ts","webpack:///./src/app/wallet/wallet.component.css","webpack:///./src/app/wallet/wallet.component.html","webpack:///./src/app/wallet/wallet.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".pt{\\n  padding-top: 30px;\\n}\\n/*.blue{\\n  background: #b31569 linear-gradient(0deg,#b31569,#e63250);\\n  min-height: 1024px;\\n}\\n*/\\n\"","module.exports = \"<div class=\\\"blue\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row pt\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <img class=\\\"img-fluid\\\" src=\\\"https://bacc.tech/wp-content/uploads/2018/07/Artboard-1.png\\\" />\\n      </div>\\n      <div class=\\\"col-md-7\\\"></div>\\n      <div class=\\\"col-md-3\\\" *ngIf=\\\"loggedin\\\">\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\n          <button class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>{{user.Email}}</button>\\n          <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n            <button class=\\\"dropdown-item\\\">Settings</button>\\n            <button class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <app-wallet *ngIf=\\\"loggedin\\\"></app-wallet>\\n  <app-login *ngIf=\\\"!loggedin\\\"></app-login>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {CookiesService} from './cookies.service';\nimport {LoginService} from './login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  loggedin = false;\n  user: any;\n  constructor(private cookies: CookiesService, private login:LoginService) {\n    if (this.cookies.getCookie('usr') != '') {\n      this.user = (JSON.parse(this.cookies.getCookie('usr')));\n      if (this.user.ID > 0) {\n        this.loggedin = true;\n      }\n    }//jhh\n  }\n  logout(){\n    this.login.logout();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { HistoryComponent } from './history/history.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport { KYCComponent } from './kyc/kyc.component';\nimport {NgxIntlTelInputModule} from 'ngx-intl-tel-input';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    WalletComponent,\n    HistoryComponent,\n    KYCComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule.forRoot(),\n    HttpClientModule,\n    NgxIntlTelInputModule,\n    BsDropdownModule.forRoot(),\n    FormsModule,\n    RouterModule.forRoot([]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookiesService {\n\n  constructor() { }\n\n  getCookie(name: string) {\n    let ca: Array<string> = document.cookie.split(';');\n    let caLen: number = ca.length;\n    let cookieName = `${name}=`;\n    let c: string;\n\n    for (let i: number = 0; i < caLen; i += 1) {\n      c = ca[i].replace(/^\\s+/g, '');\n      if (c.indexOf(cookieName) == 0) {\n        return c.substring(cookieName.length, c.length);\n      }\n    }\n    return '';\n  }\n\n  deleteCookie(name) {\n    this.setCookie(name, '', -1);\n  }\n\n  setCookie(name: string, value: string, expireDays: number, path: string = '') {\n    let d:Date = new Date();\n    d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n    let expires:string = `expires=${d.toUTCString()}`;\n    let cpath:string = path ? `; path=${path}` : '';\n    document.cookie = `${name}=${value}; ${expires}${cpath}`;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {BASEAPI, httpOptions, User} from './login.service';\nimport {HttpClient} from '@angular/common/http';\nimport {StandardResponse} from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n\n  constructor(private http: HttpClient) { }\n\n  auth(apikey:string): Observable<StandardResponse> {\n\n    return this.http.get<StandardResponse>(\"http://api.etherscan.io/api?module=account&action=txlist&address=\"+apikey+\"&startblock=0&endblock=99999999&sort=asc&apikey=YMHDHW84RT1GJQBM9V44J3F59VXGIFSGMK\", httpOptions).pipe(\n      catchError(this.handleError<StandardResponse>('fetchhistory'))\n    );\n  }\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"historylist\\\">\\n  <p *ngIf=\\\"message\\\">\\n    Here you transaction history will be shown\\n  </p>\\n  <div *ngFor=\\\"let entry of historylist.result\\\">\\n    <h4>{{entry.from}} => {{entry.to}}</h4>\\n    <a><pre>success: {{entry.hash}}</pre></a>\\n    Amount: {{entry.value/1000000000000000000}}\\n  </div>\\n\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HistoryService} from '../history.service';\nimport {CookiesService} from '../cookies.service';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  historylist: any;\n  user: any;\n  loggedin: boolean;\n  message:any\n\n  constructor(private http: HttpClient, private historyservice: HistoryService, private cookies: CookiesService) {\n    if (this.cookies.getCookie('usr') != '') {\n      this.user = (JSON.parse(this.cookies.getCookie('usr')));\n      if (this.user.ID > 0) {\n        this.loggedin = true;\n      }\n    }\n  }\n\n  ngOnInit() {\n\n    this.historyservice.auth(this.user.Pub)\n      .subscribe(us => {\n        console.log(us)\nthis.historylist = us\n        this.message=us.message\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {BASEAPI, httpOptions, User} from './login.service';\nimport {catchError, tap} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {CookiesService} from './cookies.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KYCService {\n\n  constructor(private http: HttpClient, private cookies:CookiesService) { }\n\n  auth(apikey, name, idnum, country, age): Observable<User>  {\n\n    // let refid = RegisterService.getParameterByName('refid', null) || '10099'\n    return this.http.get(BASEAPI + 'account/KYC/' + apikey + '/' + name + '/' + idnum + '/' + country + '/' + age, httpOptions).pipe(\n      tap((user: User) => {\n        // console.log(LoginService.getFormUrlEncoded(this.authData));\n        this.cookies.setCookie('usr', JSON.stringify(user), 1);\n      }),\n      catchError(this.handleError<User>('fetchhistory'))\n    );\n\n\n\n  }\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"/*\\n * Specific styles of signin component\\n */\\n/*\\n * General styles\\n */\\nbody, html {\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-image: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));\\n}\\n.card-container.card {\\n  max-width: 350px;\\n  padding: 40px 40px;\\n}\\n.btn {\\n  font-weight: 700;\\n  height: 36px;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n      user-select: none;\\n  cursor: default;\\n}\\n/*\\n * Card component\\n */\\n.card {\\n  background-color: #F7F7F7;\\n  /* just in case there no content*/\\n  padding: 20px 25px 30px;\\n  margin: 0 auto 25px;\\n  margin-top: 50px;\\n  /* shadows and rounded borders */\\n  border-radius: 2px;\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\n}\\n.profile-img-card {\\n  width: 96px;\\n  height: 96px;\\n  margin: 0 auto 10px;\\n  display: block;\\n  border-radius: 50%;\\n}\\n/*\\n * Form styles\\n */\\n.profile-name-card {\\n  font-size: 16px;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 10px 0 0;\\n  min-height: 1em;\\n}\\n.reauth-email {\\n  display: block;\\n  color: #404040;\\n  line-height: 2;\\n  margin-bottom: 10px;\\n  font-size: 14px;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  box-sizing: border-box;\\n}\\n.form-signin #inputEmail,\\n.form-signin #inputPassword,\\n.form-signin #otp{\\n  direction: ltr;\\n  height: 44px;\\n  font-size: 16px;\\n}\\n.form-signin input[type=email],\\n.form-signin input[type=password],\\n.form-signin input[type=text],\\n.form-signin button {\\n  width: 100%;\\n  display: block;\\n  margin-bottom: 10px;\\n  z-index: 1;\\n  position: relative;\\n  box-sizing: border-box;\\n}\\n.form-signin .form-control:focus {\\n  border-color: rgb(104, 145, 162);\\n  outline: 0;\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\\n}\\n.btn.btn-signin {\\n  /*background-color: #4d90fe; */\\n  /*background-color: rgb(104, 145, 162);*/\\n  /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\\n  padding: 0px;\\n  font-weight: 700;\\n  font-size: 14px;\\n  height: 36px;\\n  border-radius: 3px;\\n  border: none;\\n  transition: all 0.218s;\\n}\\n.btn.btn-signin:hover,\\n.btn.btn-signin:active,\\n.btn.btn-signin:focus {\\n  /*background-color: rgb(12, 97, 33);*/\\n}\\n.forgot-password {\\n  color: rgb(104, 145, 162);\\n}\\n.forgot-password:hover,\\n.forgot-password:active,\\n.forgot-password:focus{\\n  color: rgb(12, 97, 33);\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\" *ngIf=\\\"step1\\\">\\n    <p id=\\\"d-name\\\" class=\\\"profile-name-card\\\"></p>\\n    <pre style=\\\"max-height: 400px;overflow-scrolling: auto; overflow-wrap: break-spaces\\\">\\n        重要聲明\\n請仔細閱讀本白皮書免責聲明部分，並諮詢法律和財務專家以獲得進一步的指導。\\n\\n本系統是一份初步草案，將在BACCHUS酒神代幣可供兌換之可能前進行修訂，其中包括有關以下方面的訊息:\\n\\t兌換BACCHUS酒神幣可能受到限制的國家（若有）；和\\n\\t兌換BACCHUS酒神幣相關的其他風險。\\n\\n白皮書的最終版本將在BACCHUS酒神代幣可供兌換之前上載在BACCHUS酒神網站，以供任何人士兌換決定之前的全面審查。\\n\\n本白皮書草案不應被誤解為兌換或徵求兌換的方案。本白皮書草案中列出的人員不是也不會兌換BACCHUS酒神代幣。進行BACCHUS酒神代幣可供兌換的法定公司名稱將稍後披露。\\n\\nBACCHUS酒神代幣並不打算在任何司法管轄區構成證券。本白皮書不構成任何類型的招股說明書或要約，也不構成對任何司法管轄區證券或招攬投資證券的要約。本白皮書不構成兌換或徵求兌換BACCHUS酒神代幣的任何意見或任何意見的一部分，也不構成任何合同或投資決定的基礎或依賴于任何合同或投資決定。\\n\\n兌換BACCHUS酒神幣可能受到限制的國家\\n投資於BACCHUS酒神團隊涉及風險，僅適合擁有富裕資金的人士參與，而他們對BACCHUS酒神團隊中投資的流動性亦沒有迫切的要求，他們亦對BACCHUS酒神團隊所涉及的風險完全瞭解並願意承擔，且有足夠的財務資源來承受這些風險。投資者必須能夠承擔他們在BACCHUS酒神團隊中全部投資的損失。團隊中的權益不存在公開市場，且在預期的未來亦不會出現。團隊亦對投資者退股或轉讓權益有諸多限制。\\n\\n權益僅售予在認購協議中作出（其中包括）以下陳述的投資者：\\n(a)\\t他自承費用且僅出於投資目的而購買權益，且不會轉售或分派\\n(b)\\t他明白權益並無依照美國《證券法》或外國類似證券法進行登記，而其轉讓權利受美國《證券法》及美國、州和國外基金相關法律條文所限制，且當中權益並不存在市場；\\n(c)\\t他是：\\ni.\\t一名美國《證券法》D條例中的“受信投資者”；\\nii.\\t且不是一名美國《證券法》S條例中的“美國人”。\\n\\n團隊將要求身為合夥企業、集團公司、有限責任公司、信託公司或其它實體的潛在投資者做出陳述，其內容旨在使團隊豁免作為一家投資公司根據投資公司法進行註冊。各潛在投資者均須簽署和交付一份認購協定，作出其它陳述，並符合認購協議所述其它標準。可按投資者要求向其提供一份認購協定以及一份合夥協定。若干司法權區的投資者或須符合所在司法權區的證券法規提出的其它要求或標準。與本項目無關。\\n上述適當性標準為潛在投資者的最低適當性要求。各潛在合資格投資者以及其投資、稅務、法律、會計顧問和其它顧問徵詢意見確定此投資是否適合該投資者。\\n\\n1\\t對於開曼群島投資者：\\n于開曼群島不可向公眾發售本權益或邀約認購權益。\\n\\n2\\t對於中華人民共和國投資者：\\n不可向中華人民共和國公眾直接或間接發售權益，不可向中華人民共和國公眾提供本文（並無提交給中國證券監督管理委員會）和本文所載有關團隊權益的發售材料和資訊，上述BACCHUS酒神團隊不可用於向中華人民共和國公眾進行認購發售或出售權益。BACCHUS酒神團隊權益只可發售或出售予獲准進行外匯業務及在中國以外進行離岸投資業務的中國機構。根據中國相關外匯管制規定，中國投資者須遵守外匯管制批准和備案的規定。投資者須負責從中華人民共和國相關政府部門取得所有相關的政府批文、審核、許可或登記（若有），這些部門包括但不限於國家外匯管理局、中國證券監督管理委員會、中國銀行業監督管理委員會、中華人民共和國商務部、國家發改委和其它相關監管機構。投資者須遵守中華人民共和國的相關規定，包括但不限於相關外匯規定（例如返程投資的規定）及/或海外投資規定。\\n\\n3\\t對於香港投資者：\\n本白皮書並未提交給相關公司註冊處進行註冊，香港監管機構並未審閱其內容。香港證券及期貨事務監察委員會並未批准此團隊。因此：\\n(a)\\t不可在香港通過任何形式向香港證券及期貨條例（香港法例第571章）定義的“專業投資者”以外的人士發售或出售權益，本白皮書亦不可依據上述法例的任何規則，或對照公司條例（香港法例第32章）列出的定義而構成“招股書”，或在按公司條例規定未構成向公開募集的其它各種情況下發售或出售權益；及\\n(b)\\t除非權益僅針對或打算針對香港之外的人士或“專業投資者”發售，任何人均不得在香港或其它地方對香港公眾發佈或為發佈之目的而留存任何與權益相關的邀請、廣告或其它檔（除非按照香港證券法規的要求可以這樣操作）。香港監管機構並無審閱本私募備忘錄的內容。建議閣下處理發售時須謹慎。若閣下對本文內容有疑問，閣下應聽取獨立的專業意見。\\n\\n4.\\t對於日本投資者：\\n權益發售並無且將不會根據日本證券及交易法進行登記，除非依據日本證券及交易法和其它日本相關法規所提供的豁免，不可在日本直接或間接向其居民發售或出售權益。\\n\\n\\n5.\\t於韓國投資者：\\n團隊和投資經理均無根據韓國法律規定就本白皮書的接受者購買權益的資格作出相關陳述；韓國相關法律包括但不限於外匯交易法和相關規定。權益並無根據韓國證券及交易法或韓國間接投資資產管理法進行登記。除非跟從韓國相關法例，權益將不可在韓國直接或間接提供、出售或派發、或提供、出售或派發予重新提供或轉售之任何韓國居民。\\n\\n6.\\t對於盧森堡投資者：\\n根據盧森堡證券及期貨法第289章第304條的規定，本白皮書所述發售或邀約只可對機構投資者或其它人士進行，而根據第305條的規定則只可向資深投資者而非普通公眾發售或邀約。根據上述盧森堡法例，本白皮書並非招股書，因此，有關招股書內容的法定責任並不適用。潛在投資者須仔細考慮投資是否適合他們。本白皮書並無在盧森堡金融管理局登記為招股書，因此，本白皮書和其它與發售或出售或邀約認購或購買權益之有關檔或材料不可分發給盧森堡普通公眾，或對盧森堡任何普通公眾\\n\\n發售或出售或邀約認購或購買此權益，除非發售或出售或邀約認購或購買予\\n(a)\\t機構投資者或其它人士（根據盧森堡證券及期貨法第304條規定的條件；\\n(b)\\t資深投資者（根據盧森堡證券及期貨法第305條規定的條件；或\\n(c)\\t其它人士（根據盧森堡證券及期貨法其它適用條文規定的條件。除非通過法律效用，上述盧森堡人士認購或購買的權益不可轉讓。）\\n\\n\\n7.\\t對於臺灣投資者：\\n團隊並無且不會在臺灣政府機構進行登記。在臺灣出售權益須遵守當地法律規定和限制。不可在臺灣出售、發行或公開發售權益，及只可以私募形式對在臺灣的資深投資者出售。臺灣並無任何人士或公司實體被授權發售或出售權益，或就權益的發售和出售提供意見或作為仲介提供服務。\\n\\n8.\\t對於泰國投資者：\\n編制本文的目僅計畫對泰國機構投資者發售權益。本文並非招股書。不可在泰國公開發售權益。\\n\\n9.\\t其它司法權區：\\n於沒有遵守登記規定或其它法律規定而進行權益發售或邀約認購或購買權益屬於非法的司法權區，本文並不構成發售權益或邀約認購或購買任何權益。本文不會在任何司法權區根據相關證券法律登記為招股書。若干司法權區可能禁止分發本文，取得本文的人士必須知曉和遵守這些限制。\\n\\n本文中討論的某些事項涉及我們未來的業績，包括但不限於BACCHUS酒神未來的收入、收益、策略和前景。所有非依據歷史性資料所做的陳述均構成“前瞻性陳述”。這些前瞻性陳述存在風險和不確定性，可能會導致實際結果與預期不符。這些陳述是基於管理層的信念以及管理層依據目前獲得的資訊所做的設想。在本文中，“預期”、“打算”、“估計”、“相信”、“期望”、“應該”、“潛在”、“預測”、“項目”或類似這些用詞的使用，旨屬前瞻性陳述。\\n\\n謹請讀者注意，不要過分依賴這些前瞻性陳述而作出任何個人決定。儘管我們盡一切努力確保本白皮書中所有資訊的準確性和最新性，但這些材料絕不構成專業意見。 BACCHUS酒神既不保證也不承擔對本文內容的準確性、可靠性、當前性（如本白皮書）或完整性的責任。有意投資此平臺的個人應在徵求本文所載任何資訊之前尋求獨立的專業意見。本白皮書中列出的任何資訊並沒有受到監管機構審查或批准。本白皮書沒有或將要根據任何司法管 轄區 的法律、監管要求或規則，採取這樣的行動。本白皮書的發佈，分發或傳播並不意味著己經遵守適用的 法律、法規要求或規定。\\n\\n藉由您接受或依賴本白皮書或其任何部分而產生或與之有關的決定，在適用的法律、法規和規則允許的最大範圍內，BACCHUS酒神及其關聯公司和代幣發行合作夥伴不承擔任何形式的侵權、合同或其他方面的任何間接、特殊、附帶、間接或其他損失（包括但不限於收入，收入或利潤的損失，以及使用或資料的丟失）。BACCHUS酒神及其附屬公司和代幣發行合作夥伴不會以任何形式向任何實體或個人作出或聲稱做出任何陳述、保證或承諾，包括與真相、準確性有關的陳述，保證或承諾以及本系統白皮書中提供的任何資訊的完整性。\\n    </pre>\\n    <button class=\\\"btn btn-lg btn-outline-primary btn-block btn-signin\\\" type=\\\"submit\\\" (click)=\\\"step2=true;step1=false;\\\">同意</button>\\n    <button class=\\\"btn btn-lg btn-outline-primary btn-block btn-signin\\\" type=\\\"submit\\\" >不同意</button>\\n  </div>\\n  <div class=\\\"card card-container\\\" *ngIf=\\\"step2\\\">\\n    <p id=\\\"d-nsame\\\" class=\\\"profile-name-card\\\"></p>\\n    <form class=\\\"form-signin\\\">\\n      <span id=\\\"d-email\\\" class=\\\"reauth-email\\\"></span>\\n      <input  [(ngModel)]=\\\"name\\\" name=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"你的名字\\\" required autofocus>\\n      <input [(ngModel)]=\\\"idnum\\\"  name=\\\"inputPhone\\\" class=\\\"form-control\\\" placeholder=\\\"身份證字號\\\" required>\\n      <input [(ngModel)]=\\\"country\\\"  name=\\\"inputPhone\\\" class=\\\"form-control\\\" placeholder=\\\"國籍\\\" required>\\n      <input [(ngModel)]=\\\"age\\\" type=\\\"number\\\" name=\\\"inputPhone\\\" class=\\\"form-control\\\" placeholder=\\\"年齡\\\" required>\\n\\n\\n      <!--label>\\n        <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n      </label-->\\n\\n      <button class=\\\"btn btn-lg btn-outline-primary btn-block btn-signin\\\" type=\\\"submit\\\" (click)=\\\"reg()\\\">Submit</button>\\n      <div *ngIf=\\\"newusr\\\">\\n        <!--p >你的 password 是 {{newusr.Password}}</p>\\n        <!--p >你的 TOTP Key 是 {{newusr.Key}}</p>\\n        <p-- >這些資料只會出現一次，請謹記。</p-->\\n        <p>從現在開始，你就可以登入並且購買BACS。</p>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {KYCService} from '../kyc.service';\nimport {User} from '../login.service';\nimport {CookiesService} from '../cookies.service';\n\n@Component({\n  selector: 'app-kyc',\n  templateUrl: './kyc.component.html',\n  styleUrls: ['./kyc.component.css']\n})\nexport class KYCComponent implements OnInit {\n\n\n  @Input() name\n  @Input() age\n  @Input() idnum\n  @Input() country\n  step1 = true\n  step2:boolean\n  user:User\n  newusr:any\n  constructor(private kycservice: KYCService, private cookies: CookiesService) {\n    if (this.cookies.getCookie('usr') != '') {\n      this.user = (JSON.parse(this.cookies.getCookie('usr')));\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n  public reg(): void {\n\n    // console.log('clicked');\n    this.kycservice.auth(this.user.APIKey, this.name.trim() ,this.idnum.trim(), this.country.trim(),this.age.trim())\n      .subscribe(user => {\n        this.newusr = user;\n        location.reload();\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {catchError, tap} from 'rxjs/operators';\nimport {CookiesService} from './cookies.service';\nimport {localtest} from './constants/serverconfig';\n\nexport const BASEAPI = 'https://api.bacc.tech/api/v1/';\n\n\nexport class User {\n  ID: number;\n  Email: string;\n  PwHash: string;\n  APIKey: string ;\n  Pub:   string ;\n  Priv: string ;\n  Phone: string ;\n  Name :string;\n}\n\nexport class AuthData {\n  email: string;\n  password: string;\n  otp: string;\n}\n\nexport const httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/x-www-form-urlencoded'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private heroesUrl = BASEAPI + 'account/login/';  // URL to web api\\\n\n  loginbool: Observable<boolean>;\n  private boolSubject: Subject<boolean>;\n\n  constructor(\n    private http: HttpClient,\n    private cookies: CookiesService,\n     ) {  }\n\n  user_logged_in: boolean;\n  user_login_failed: boolean;\n  authData: AuthData;\n\n  logout(): void {\n    this.cookies.deleteCookie('usr');\n    this.cookies.deleteCookie('loggedinonce');\n    location.reload();\n  }\n\n  static getFormUrlEncoded(toConvert) {\n    const formBody = [];\n    for (const property in toConvert) {\n      const encodedKey = encodeURIComponent(property);\n      const encodedValue = encodeURIComponent(toConvert[property]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    return formBody.join('&');\n  }\n\n  auth(email: string, password: string, otp: string): Observable<User> {\n\n    return this.http.get(this.heroesUrl + email + '/' + password + '/' + otp, httpOptions).pipe(\n      tap((user: User) => {\n        console.log(LoginService.getFormUrlEncoded(this.authData));\n        this.cookies.setCookie('usr', JSON.stringify(user), 1);\n      }),\n      catchError(this.handleError<User>('fetchuser'))\n    );\n\n\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","module.exports = \"/*\\n * Specific styles of signin component\\n */\\n/*\\n * General styles\\n */\\nbody, html {\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-image: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));\\n}\\n.card-container.card {\\n  max-width: 350px;\\n  padding: 40px 40px;\\n}\\n.btn {\\n  font-weight: 700;\\n  height: 36px;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n      user-select: none;\\n  cursor: default;\\n}\\n/*\\n * Card component\\n */\\n.card {\\n  background-color: #F7F7F7;\\n  /* just in case there no content*/\\n  padding: 20px 25px 30px;\\n  margin: 0 auto 25px;\\n  margin-top: 50px;\\n  /* shadows and rounded borders */\\n  border-radius: 2px;\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\n}\\n.profile-img-card {\\n  width: 96px;\\n  height: 96px;\\n  margin: 0 auto 10px;\\n  display: block;\\n  border-radius: 50%;\\n}\\n/*\\n * Form styles\\n */\\n.profile-name-card {\\n  font-size: 16px;\\n  font-weight: bold;\\n  text-align: center;\\n  margin: 10px 0 0;\\n  min-height: 1em;\\n}\\n.reauth-email {\\n  display: block;\\n  color: #404040;\\n  line-height: 2;\\n  margin-bottom: 10px;\\n  font-size: 14px;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  box-sizing: border-box;\\n}\\n.form-signin #inputEmail,\\n.form-signin #inputPassword,\\n.form-signin #otp{\\n  direction: ltr;\\n  height: 44px;\\n  font-size: 16px;\\n}\\n.form-signin input[type=email],\\n.form-signin input[type=password],\\n.form-signin input[type=text],\\n.form-signin button {\\n  width: 100%;\\n  display: block;\\n  margin-bottom: 10px;\\n  z-index: 1;\\n  position: relative;\\n  box-sizing: border-box;\\n}\\n.form-signin .form-control:focus {\\n  border-color: rgb(104, 145, 162);\\n  outline: 0;\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);\\n}\\n.btn.btn-signin {\\n  /*background-color: #4d90fe; */\\n  /*background-color: rgb(104, 145, 162);*/\\n  /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\\n  padding: 0px;\\n  font-weight: 700;\\n  font-size: 14px;\\n  height: 36px;\\n  border-radius: 3px;\\n  border: none;\\n  transition: all 0.218s;\\n}\\n.btn.btn-signin:hover,\\n.btn.btn-signin:active,\\n.btn.btn-signin:focus {\\n  /*background-color: rgb(12, 97, 33);*/\\n}\\n.forgot-password {\\n  color: rgb(104, 145, 162);\\n}\\n.forgot-password:hover,\\n.forgot-password:active,\\n.forgot-password:focus{\\n  color: rgb(12, 97, 33);\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"card card-container\\\" >\\n    <!-- <img class=\\\"profile-img-card\\\" src=\\\"//lh3.googleusercontent.com/-6V8xOA6M7BA/AAAAAAAAAAI/AAAAAAAAAAA/rzlHcD0KYwo/photo.jpg?sz=120\\\" alt=\\\"\\\" /> -->\\n    <img id=\\\"profile-img\\\" class=\\\"profile-img-card\\\" src=\\\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\\\" />\\n    <p id=\\\"profile-name\\\" class=\\\"profile-name-card\\\"></p>\\n    <form class=\\\"form-signin\\\">\\n      <span id=\\\"reauth-email\\\" class=\\\"reauth-email\\\"></span>\\n      <input  [(ngModel)]=\\\"authData.email\\\" type=\\\"email\\\" name=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required autofocus>\\n      <input [(ngModel)]=\\\"authData.password\\\" type=\\\"password\\\" name=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n\\n      <div id=\\\"remember\\\" class=\\\"checkbox\\\">\\n        <!--label>\\n          <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n        </label-->\\n      </div>\\n      <button class=\\\"btn btn-lg btn-outline-primary btn-block btn-signin\\\" type=\\\"submit\\\" (click)=\\\"add()\\\">Sign in</button>\\n      <p *ngIf=\\\"faillogin\\\">Login failed!</p>\\n    </form><!-- /form -->\\n    <!--a class=\\\"forgot-password\\\">\\n      Forgot the password?\\n    </a><br-->\\n    <a class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"registerscreen=true\\\">\\n      Register\\n    </a>\\n  </div><!-- /card-container -->\\n  <div class=\\\"card card-container\\\" *ngIf=\\\"registerscreen\\\">\\n    <p id=\\\"d-name\\\" class=\\\"profile-name-card\\\"></p>\\n    <form class=\\\"form-signin\\\">\\n      <span id=\\\"d-email\\\" class=\\\"reauth-email\\\"></span>\\n      <input  [(ngModel)]=\\\"emailreg\\\" type=\\\"email\\\" name=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required autofocus>\\n      <div class=\\\"input-group\\\">\\n        <ngx-intl-tel-input [(value)]=\\\"phonereg\\\"></ngx-intl-tel-input>\\n        <input [(ngModel)]=\\\"pwreg\\\" type=\\\"password\\\" name=\\\"inputPhone\\\" class=\\\"form-control\\\" placeholder=\\\"設定密碼 \\\" required>\\n        <input [(ngModel)]=\\\"pwreg2\\\" type=\\\"password\\\" name=\\\"inputPhone\\\" class=\\\"form-control\\\" placeholder=\\\"確認密碼 \\\" required>\\n        <p *ngIf=\\\"pwnm\\\">Passwords do not match</p>\\n      </div>\\n\\n\\n\\n        <!--label>\\n          <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n        </label-->\\n\\n      <button class=\\\"btn btn-lg btn-outline-primary btn-block btn-signin\\\" type=\\\"submit\\\" (click)=\\\"reg()\\\">Register</button>\\n      <div *ngIf=\\\"newusr\\\">\\n        <!--p >你的 password 是 {{newusr.Password}}</p>\\n        <!--p >你的 TOTP Key 是 {{newusr.Key}}</p>\\n        <p-- >這些資料只會出現一次，請謹記。</p-->\\n        <p>從現在開始，你就可以登入並且購買BACS。</p>\\n      </div>\\n    </form>\\n  </div>\\n</div><!-- /container -->\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {AuthData, LoginService} from '../login.service';\nimport {Router} from '@angular/router';\nimport {RegisterService} from '../register.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private loginService: LoginService, private regservice: RegisterService) {\n    this.registerscreen=false;\n  }\n\n  loggedin: boolean;\n  registerscreen: boolean;\n  faillogin: boolean;\n  errmsh: string;\n  @Input()\n  authData: AuthData = {\n    email: '',\n    password: '',\n    otp: ''\n  };\n  @Input() emailreg\n  @Input() phonereg\n  @Input() areacode\n  @Input() pwreg\n  @Input() pwreg2\n  newusr\n  pwnm:boolean\n  \n\n  public returnloginstatus(): boolean {\n    return this.loggedin;\n  }\n\n  public add(): void {\n\n    // console.log('clicked');\n    this.loginService.auth(this.authData.email.trim().toLowerCase(), this.authData.password.trim(), '990993')\n      .subscribe(user => {\n        if (user.ID > 0) {\n          console.log('Login Successful');\n          location.reload();\n        } else {\n          this.faillogin = true;\n          //this.errmsh = user.Name;\n        }\n      });\n  }\n\n  public reg(): void {\n\n    // console.log('clicked');\n    if(this.pwreg == this.pwreg2){\n      this.regservice.auth(this.emailreg.trim().toLowerCase(), this.areacode.trim() + this.phonereg.trim(),this.pwreg.trim())\n        .subscribe(user => {\n          this.newusr=user\n        });\n    }\n\n  }\n\n  ngOnInit(): void {\n    if(this.pwreg != this.pwreg2){\n      this.pwnm=true\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {BASEAPI, httpOptions} from './login.service';\nimport {catchError} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient, private activatedRoute: ActivatedRoute) { }\n\n  static getParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  // @ts-ignore\n  auth(email, phone, pw): Observable<Object> {\n\n      let refid = RegisterService.getParameterByName('refid', null) || '10099'\n      return this.http.get(BASEAPI + 'account/register/' + email + '/' + phone + '/' + refid + '/' + pw, httpOptions).pipe(\n        catchError(this.handleError<Object>('fetchhistory'))\n      );\n\n\n\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {BASEAPI, httpOptions} from './login.service';\nimport {catchError} from 'rxjs/operators';\n\nexport class StandardResponse{\n  status:any;\n  message:any;\n  result:any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService {\n\n  constructor(private http: HttpClient) { }\n\n  auth(user:any): Observable<StandardResponse> {\n\n    return this.http.get<StandardResponse>(\"https://api.etherscan.io/api?module=account&action=balance&address=\"+user.Pub+\"&tag=latest&apikey=%20YMHDHW84RT1GJQBM9V44J3F59VXGIFSGMK\", httpOptions).pipe(\n      catchError(this.handleError<StandardResponse>('fetchhistory'))\n    );\n  }\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \".pt{\\n  padding-top: 30px;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"!kycscreen\\\">\\n<div class=\\\"container pt\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3>Token</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"jumbotron\\\">\\n            <h1>\\n              {{balance*1500/1000000000000000000}} BACCHUS\\n            </h1>\\n            <p>~{{balance/1000000000000000000}} ETH</p>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"open(content)\\\" disabled>\\n                發送\\n              </button>\\n              <button class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"open(content2)\\\">\\n                購買\\n              </button>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row pt\\\">\\n    <div class=\\\"col-md-9\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3>History</h3>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <app-history></app-history>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-outline-primary btn-lg\\\">\\n                Whitepaper\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <button class=\\\"btn btn-outline-primary btn-lg\\\">\\n                MVP Version\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<ng-template #content let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Send BACC</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>Your Ethereum Address</p>\\n    <input class=\\\"form-control\\\"  placeholder=\\\"0x..........\\\"/>\\n    <pre>Do not withdraw tokens to an exchange and only withdraw to wallets which support ERC20 tokens (MEW, Metamask, MIST, Ethereum wallet and others)\\n    </pre>\\n    <p>Amount BACS</p>\\n    <input class=\\\"form-control\\\"  placeholder=\\\"20\\\"/>\\n    <pre>Min Withdrawal: 20 BACS\\n    </pre>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Save click')\\\">Send</button>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #content2 let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Receive</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"input-group mb-3\\\">\\n      <input id=\\\"myInput\\\" type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"user.Pub\\\" placeholder=\\\"Recipient's username\\\" aria-label=\\\"Recipient's username\\\" aria-describedby=\\\"button-addon2\\\">\\n      <div class=\\\"input-group-append\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" id=\\\"button-addon2\\\" (click)=\\\"myFunction()\\\">Copy</button>\\n      </div>\\n    </div>\\n    <p>1 ETH = 1500 BACS</p>\\n    <pre>Send BACS to this address. 使用二維碼轉賬請小心核對地址</pre>\\n    <img class=\\\"img-fluid\\\" src=\\\"https://sales.bacc.tech/cgi/qr_img.php?d={{user.Pub}}&e=M&s=4\\\"  alt=\\\"\\\">\\n  </div>\\n</ng-template>\\n</div>\\n<div *ngIf=\\\"kycscreen\\\"><app-kyc></app-kyc></div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CookiesService} from '../cookies.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {WalletService} from '../wallet.service';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css']\n})\nexport class WalletComponent implements OnInit {\n\n  user:any;\n  loggedin:boolean;\n  balance:any;\n  kycscreen:boolean\n\n  constructor(private cookies: CookiesService,private modalService: NgbModal, private walletservice : WalletService) {\n    if (this.cookies.getCookie('usr') != '') {\n      this.user = (JSON.parse(this.cookies.getCookie('usr')));\n      if (this.user.ID > 0 && this.user.Name) {\n        this.loggedin = true;\n      }else{\n        this.kycscreen = true\n      }\n    }\n  }\n\n   myFunction() {\n    /* Get the text field */\n    var copyText = document.getElementById(\"myInput\") as HTMLInputElement;\n\n    /* Select the text field */\n    copyText.select();\n\n    /* Copy the text inside the text field */\n    document.execCommand(\"copy\");\n\n    /* Alert the copied text */\n    alert(\"Copied the text: \" + copyText.value);\n  }\n\n  ngOnInit() {\n  this.walletservice.auth(this.user)\n      .subscribe(user => {\nthis.balance=user.result\n        console.log (user)\n      });\n  }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      //this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      //this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}